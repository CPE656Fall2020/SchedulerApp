using System.Collections.Generic;
using SchedulerDatabase.Models;
using SchedulerGUI.Models;

namespace SchedulerGUI.Solver
{
    /// <summary>
    /// <see cref="ScheduleSolution"/> contains a solution on which encryption devices, if any, can perform the required operations
    /// within the defined power and time budgets for a series of orbits.
    /// </summary>
    public class ScheduleSolution
    {
        /// <summary>
        /// Gets or sets a value indicating whether a feasible solution could be determined.
        /// </summary>
        public bool IsSolvable { get; set; }

        /// <summary>
        /// Gets or sets a mapping between the orbital passes of the satellite and the recommended viable AES profile to use.
        /// </summary>
        public Dictionary<PassOrbit, IByteStreamProcessor> ViableProfiles { get; set; }

        /// <summary>
        /// Gets or sets a collection of problems encountered while computing this schedule.
        /// </summary>
        public List<SchedulerProblem> Problems { get; set; }

        /// <summary>
        /// A problem encountered while computing an AES schedule.
        /// </summary>
        public class SchedulerProblem
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="SchedulerProblem"/> class.
            /// </summary>
            /// <param name="severityLevel">The severity level.</param>
            /// <param name="message">The warning text.</param>
            public SchedulerProblem(SeverityLevel severityLevel, string message)
            {
                this.Level = severityLevel;
                this.Message = message;
            }

            /// <summary>
            /// The level of criticality for messages generated by a scheduler.
            /// </summary>
            public enum SeverityLevel
            {
                /// <summary>
                /// A warning that may provide useful information about the quality of the solution,
                /// but that is not critical to address.
                /// </summary>
                Warning,

                /// <summary>
                /// An error that may substantially affect a schedule, but is not guaranteed to
                /// render the problem unsolvable.
                /// </summary>
                Error,

                /// <summary>
                /// A critical error that will prevent a valid schedule from being generated.
                /// </summary>
                Fatal,
            }

            /// <summary>
            /// Gets the severity level of this warning.
            /// </summary>
            public SeverityLevel Level { get; }

            /// <summary>
            /// Gets the message text for this warning.
            /// </summary>
            public string Message { get; }
        }
    }
}
